name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18.x'
  PNPM_VERSION: '8.x'

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
        cache-dependency-path: 'shadcn-ui/pnpm-lock.yaml'

    - name: Install dependencies
      working-directory: ./shadcn-ui
      run: pnpm install --frozen-lockfile

    - name: Run ESLint with detailed output
      working-directory: ./shadcn-ui
      run: |
        pnpm eslint . --ext .ts,.tsx,.js,.jsx --format=json --output-file=eslint-report.json || true
        pnpm eslint . --ext .ts,.tsx,.js,.jsx

    - name: Run Prettier check
      working-directory: ./shadcn-ui
      run: |
        npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,css,md}" || true

    - name: TypeScript strict mode check
      working-directory: ./shadcn-ui
      run: |
        pnpm tsc --noEmit --strict --noImplicitAny --noImplicitReturns --noImplicitThis

    - name: Check for unused dependencies
      working-directory: ./shadcn-ui
      run: |
        npx depcheck --json > depcheck-report.json || true
        cat depcheck-report.json

    - name: Bundle size analysis
      working-directory: ./shadcn-ui
      run: |
        pnpm build
        npx bundlesize || true

    - name: Upload ESLint report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: eslint-report
        path: shadcn-ui/eslint-report.json

    - name: Upload dependency check report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: depcheck-report
        path: shadcn-ui/depcheck-report.json

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
        cache-dependency-path: 'shadcn-ui/pnpm-lock.yaml'

    - name: Install dependencies
      working-directory: ./shadcn-ui
      run: pnpm install --frozen-lockfile

    - name: Run tests with coverage
      working-directory: ./shadcn-ui
      run: |
        pnpm test --coverage --watchAll=false || true

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=noblepay_web-app
          -Dsonar.organization=noblepay
          -Dsonar.sources=shadcn-ui/src
          -Dsonar.tests=shadcn-ui/src
          -Dsonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx
          -Dsonar.typescript.lcov.reportPaths=shadcn-ui/coverage/lcov.info
          -Dsonar.javascript.lcov.reportPaths=shadcn-ui/coverage/lcov.info